name: Playwright Tests
on:
  push:
    branches:
      - 'feature/**'
  pull_request:
    branches:
      - main
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install pnpm
      run: npm install -g pnpm
    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile
    - name: Install web app dependencies
      run: cd apps/web && pnpm install --no-frozen-lockfile
    - name: Verify workspace installation
      run: |
        echo "Checking apps/web node_modules..."
        ls apps/web/node_modules/.bin/next || echo "ERROR: Next.js not installed!"
        echo "Checking root node_modules..."
        ls node_modules/@playwright || echo "ERROR: Playwright not installed!"
    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps
    - name: Create environment files
      run: |
        # Create root .env.local for Playwright config
        echo "TEST_USER_EMAIL=${{ secrets.TEST_USER_EMAIL }}" > .env.local
        echo "TEST_USER_PASSWORD=${{ secrets.TEST_USER_PASSWORD }}" >> .env.local

        # Create apps/web/.env.local for Next.js app
        echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" > apps/web/.env.local
        echo "NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> apps/web/.env.local
    - name: Debug environment files
      run: |
        echo "=== Checking if files exist ==="
        ls -la .env.local
        ls -la apps/web/.env.local

        echo ""
        echo "=== Root .env.local contents (length check) ==="
        wc -l .env.local
        head -c 100 .env.local

        echo ""
        echo "=== apps/web/.env.local contents (length check) ==="
        wc -l apps/web/.env.local
        head -c 100 apps/web/.env.local

        echo ""
        echo "=== Checking if secrets are empty ==="
        if [ -z "${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" ]; then
          echo "ERROR: NEXT_PUBLIC_SUPABASE_URL secret is empty!"
        else
          echo "NEXT_PUBLIC_SUPABASE_URL is set (length: ${#NEXT_PUBLIC_SUPABASE_URL})"
        fi

        if [ -z "${{ secrets.SUPABASE_ANON_KEY }}" ]; then
          echo "ERROR: SUPABASE_ANON_KEY secret is empty!"
        else
          echo "SUPABASE_ANON_KEY is set"
        fi
    - name: Run Playwright tests
      run: pnpm exec playwright test tests/end2end/login.spec.ts
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
